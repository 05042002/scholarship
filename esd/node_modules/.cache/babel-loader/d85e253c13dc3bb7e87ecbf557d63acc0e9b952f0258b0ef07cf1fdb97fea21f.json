{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niharika\\\\Desktop\\\\Scholarship Management\\\\scholarship\\\\esd\\\\src\\\\components\\\\BasicExample.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BasicExample() {\n  _s();\n  // const [list, setList] = useState(['apple', 'banana', 'orange']);\n  // const [index, setIndex] = useState(0);\n\n  // const handleChange = (event) => {\n  //   setIndex(Number(event.target.value));\n  // };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (index < list.length) {\n  //     alert(list[index]);\n  //   } else {\n  //     alert('Index is out of range');\n  //   }\n  // };\n\n  // return (\n  //   <>\n  //    <form onSubmit={handleSubmit}>\n  //       <label>\n  //         Enter an index number:\n  //         <input type=\"number\" value={index} onChange={handleChange} />\n  //       </label>\n  //       <button type=\"submit\">Show Element</button>\n  //     </form>\n  //   </>\n  // );\n\n  // const [dictionary, setDictionary] = useState({apple: {quantity: 10, price: 1.50}, banana: {quantity: 5, price: 0.75}, orange: {quantity: 15, price: 2.00}});\n  // const [key, setKey] = useState('');\n\n  // const handleChange = (event) => {\n  //   setKey(event.target.value);\n  // };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (key in dictionary) {\n  //     alert(`Quantity: ${dictionary[key].quantity}, Price: ${dictionary[key].price}`);\n  //   } else {\n  //     alert('Key not found in dictionary');\n  //   }\n  // };\n\n  // return (\n  //   <div>\n  //     <form onSubmit={handleSubmit}>\n  //       <label>\n  //         Enter a key:\n  //         <input type=\"text\" value={key} onChange={handleChange} />\n  //       </label>\n  //       <button type=\"submit\">Show Value</button>\n  //     </form>\n  //   </div>\n  // );\n\n  const [dictionary, setDictionary] = useState({\n    apple: [1, 'red', 'fruit'],\n    banana: [2, 'yellow', 'fruit'],\n    carrot: [3, 'orange', 'vegetable']\n  });\n  const [selectedKey, setSelectedKey] = useState('');\n  const handleButtonClick = key => {\n    setSelectedKey(key);\n  };\n  const selectedValues = selectedKey ? dictionary[selectedKey] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a key:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), Object.keys(dictionary).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick(key),\n      children: key\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)), selectedKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Values for \", selectedKey, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicExample, \"H/SGCeY7K14lXCTOegIySzk9qx0=\");\n_c = BasicExample;\nexport default BasicExample;\nvar _c;\n$RefreshReg$(_c, \"BasicExample\");","map":{"version":3,"names":["React","useState","Nav","Tab","jsxDEV","_jsxDEV","BasicExample","_s","dictionary","setDictionary","apple","banana","carrot","selectedKey","setSelectedKey","handleButtonClick","key","selectedValues","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","value","index","_c","$RefreshReg$"],"sources":["C:/Users/Niharika/Desktop/Scholarship Management/scholarship/esd/src/components/BasicExample.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport { Nav, Tab } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction BasicExample() {\r\n\r\n  // const [list, setList] = useState(['apple', 'banana', 'orange']);\r\n  // const [index, setIndex] = useState(0);\r\n\r\n  // const handleChange = (event) => {\r\n  //   setIndex(Number(event.target.value));\r\n  // };\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   if (index < list.length) {\r\n  //     alert(list[index]);\r\n  //   } else {\r\n  //     alert('Index is out of range');\r\n  //   }\r\n  // };\r\n\r\n  // return (\r\n  //   <>\r\n  //    <form onSubmit={handleSubmit}>\r\n  //       <label>\r\n  //         Enter an index number:\r\n  //         <input type=\"number\" value={index} onChange={handleChange} />\r\n  //       </label>\r\n  //       <button type=\"submit\">Show Element</button>\r\n  //     </form>\r\n  //   </>\r\n  // );\r\n\r\n  // const [dictionary, setDictionary] = useState({apple: {quantity: 10, price: 1.50}, banana: {quantity: 5, price: 0.75}, orange: {quantity: 15, price: 2.00}});\r\n  // const [key, setKey] = useState('');\r\n\r\n  // const handleChange = (event) => {\r\n  //   setKey(event.target.value);\r\n  // };\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   if (key in dictionary) {\r\n  //     alert(`Quantity: ${dictionary[key].quantity}, Price: ${dictionary[key].price}`);\r\n  //   } else {\r\n  //     alert('Key not found in dictionary');\r\n  //   }\r\n  // };\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <form onSubmit={handleSubmit}>\r\n  //       <label>\r\n  //         Enter a key:\r\n  //         <input type=\"text\" value={key} onChange={handleChange} />\r\n  //       </label>\r\n  //       <button type=\"submit\">Show Value</button>\r\n  //     </form>\r\n  //   </div>\r\n  // );\r\n\r\n  const [dictionary, setDictionary] = useState({\r\n    apple: [1, 'red', 'fruit'],\r\n    banana: [2, 'yellow', 'fruit'],\r\n    carrot: [3, 'orange', 'vegetable']\r\n  });\r\n  const [selectedKey, setSelectedKey] = useState('');\r\n\r\n  const handleButtonClick = (key) => {\r\n    setSelectedKey(key);\r\n  };\r\n\r\n  const selectedValues = selectedKey ? dictionary[selectedKey] : [];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select a key:</h2>\r\n      {Object.keys(dictionary).map((key) => (\r\n        <button key={key} onClick={() => handleButtonClick(key)}>\r\n          {key}\r\n        </button>\r\n      ))}\r\n      {selectedKey && (\r\n        <div>\r\n          <h2>Values for {selectedKey}:</h2>\r\n          <ul>\r\n            {selectedValues.map((value, index) => (\r\n              <li key={index}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}\r\n  \r\n\r\n\r\nexport default BasicExample;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC;AAC7C,OAAO,oCAAoC;AAC3C,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK3C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEtB;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IAC3CS,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC;IAC1BC,MAAM,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC9BC,MAAM,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,WAAW;EACnC,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,iBAAiB,GAAIC,GAAG,IAAK;IACjCF,cAAc,CAACE,GAAG,CAAC;EACrB,CAAC;EAED,MAAMC,cAAc,GAAGJ,WAAW,GAAGL,UAAU,CAACK,WAAW,CAAC,GAAG,EAAE;EAEjE,oBACER,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACrBC,MAAM,CAACC,IAAI,CAAChB,UAAU,CAAC,CAACiB,GAAG,CAAET,GAAG,iBAC/BX,OAAA;MAAkBqB,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACC,GAAG,CAAE;MAAAE,QAAA,EACrDF;IAAG,GADOA,GAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGjB,CAAC,EACDT,WAAW,iBACVR,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAI,aAAW,EAACL,WAAW,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClCjB,OAAA;QAAAa,QAAA,EACGD,cAAc,CAACQ,GAAG,CAAC,CAACE,KAAK,EAAEC,KAAK,kBAC/BvB,OAAA;UAAAa,QAAA,EAAiBS;QAAK,GAAbC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAGV;AAACf,EAAA,CA5FQD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAgGrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}